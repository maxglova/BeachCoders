{"id":"index.html","dependencies":[{"name":"/Users/maxglova/Desktop/BeachCoders/puppyRecipies/package.json","includedInParent":true,"mtime":1582607252805}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Puppy Recipies</title>\n</head>\n<body>\n    <form>\n        <input type=\"text\" name=\"dis-shit\" value=\"pizza\">\n        <button name=\"submit\"></button>\n    </form>\n    <script>function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// baseEndpoint\nvar baseEndpoint = \"http://www.recipepuppy.com\";\nvar api = \"\".concat(baseEndpoint, \"/api/\"); // DOM Elements\n\nvar query = document.querySelector('input').value;\n\nfunction handlerError(err) {\n  console.log(\"Huston we have a problem\");\n  console.log(err);\n} // query\n\n\nfunction displayRecipies() {\n  return _displayRecipies.apply(this, arguments);\n}\n\nfunction _displayRecipies() {\n  _displayRecipies = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var response, data;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(api, \"?q=\").concat(query));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            // = JSON.parse()\n            console.log(data); // load to the DOM\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _displayRecipies.apply(this, arguments);\n}\n\ndisplayRecipies('burger').catch(handlerError);</script>\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"a502f4b7fe5c80470bac4f258c67494f","cacheData":{"env":{}}}